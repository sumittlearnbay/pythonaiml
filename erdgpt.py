# -*- coding: utf-8 -*-
"""Untitled35.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jNdV2luN64RvniPDE_uyL6V_biA_nvQl
"""

from huggingface_hub import login

# Replace with your actual API key
hf_token = "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"
login(token=hf_token)

from transformers import AutoModelForCausalLM, AutoTokenizer
import torch

# Use an available Mistral 7B model
model_name = "mistralai/Mistral-7B-Instruct-v0.1"

# Load tokenizer and model
tokenizer = AutoTokenizer.from_pretrained(model_name, use_auth_token=True)
model = AutoModelForCausalLM.from_pretrained(
    model_name, device_map="auto", torch_dtype=torch.float16
)

# Function to generate ERD from description or SQL schema
def generate_erd(input_text):
    prompt = f"Generate an Entity-Relationship Diagram (ERD) description from the following:\n{input_text}"
    inputs = tokenizer(prompt, return_tensors="pt").to("cuda")
    outputs = model.generate(**inputs, max_new_tokens=500)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

description = """
A company has employees, departments, and projects. Employees belong to departments,
and each department is managed by one employee. Employees can work on multiple projects.
"""

print("ðŸ”¹ ERD from Description:\n", generate_erd(description))

sql_schema = """
CREATE TABLE Employees (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    age INT,
    department_id INT,
    FOREIGN KEY (department_id) REFERENCES Departments(id)
);

CREATE TABLE Departments (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    manager_id INT,
    FOREIGN KEY (manager_id) REFERENCES Employees(id)
);

CREATE TABLE Projects (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    start_date DATE,
    end_date DATE
);

CREATE TABLE Employee_Projects (
    employee_id INT,
    project_id INT,
    PRIMARY KEY (employee_id, project_id),
    FOREIGN KEY (employee_id) REFERENCES Employees(id),
    FOREIGN KEY (project_id) REFERENCES Projects(id)
);
"""

print("\nðŸ”¹ ERD from SQL Schema:\n", generate_erd(sql_schema))

from transformers import AutoModelForCausalLM, AutoTokenizer
import torch

model_name = "mistralai/Mistral-7B-Instruct-v0.1"

tokenizer = AutoTokenizer.from_pretrained(model_name, use_auth_token=True)
model = AutoModelForCausalLM.from_pretrained(model_name, device_map="cpu")

def generate_response(prompt):
    inputs = tokenizer(prompt, return_tensors="pt").to("cpu")  # Change to CPU
    outputs = model.generate(**inputs, max_new_tokens=300)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

prompt = "Generate a Java POJO class for an Employee with id, name, and age."
response = generate_response(prompt)

print("Generated Output:\n", response)